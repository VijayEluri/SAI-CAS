<?xml version="1.0"?>
<project name="sai_cas" default="all">

	<property file="build.properties"/>		

	<property name="tomcat.common.lib" value="${tomcat.home}/common/lib"/>
	<property name="tomcat.server.lib" value="${tomcat.home}/server/lib"/>
	
	<property name="axis.web-inf.lib"
		value="${tomcat.home}/webapps/axis/WEB-INF/lib"/>	
	<property name="axis.lib" value="${axis.home}/lib"/>
	<property name="axis2.web-inf.lib"
		value="${tomcat.home}/webapps/axis2/WEB-INF/lib"/>	
	<property name="axis2.lib" value="${axis2.home}/lib"/>
	<property name="glassfish.imq.lib"	value="/opt/java_libs/glassfish/imq/lib" />
	
	<property name="build" value="${basedir}/build"/>
	<property name="build.classes" value="${build}/classes"/>
	<property name="build.wsdl" value="${build}/wsdl"/>
	<property name="build.axis2-wsdl" value="${build}/axis2-wsdl"/>
	
	<property name="gen.src" value="${basedir}/gen_src"/>
	<property name="gen.src.axis" value="${basedir}/gen_src_axis"/>
	<property name="gen.src.axis2" value="${basedir}/gen_src_axis2"/>

	<property name="impl" value="${basedir}/impl"/>
	<property name="docs" value="${basedir}/docs"/>
	
	<!-- Definition of various Ant tasks -->
	
	<!-- Axis1 tasks -->
	<taskdef resource="axis-tasks.properties">
		<classpath>
			<fileset dir="${axis.lib}" includes="*.jar"/>
			<fileset dir="${javamail.lib}" includes="*.jar"/>
			<fileset dir="${activation.lib}" includes="*.jar"/>
		</classpath>
	</taskdef>
	
	<!-- Tomcat tasks -->
	<taskdef resource="org/apache/catalina/ant/antlib.xml">
		<classpath>
			<fileset dir="${tomcat.server.lib}" includes="catalina-ant.jar"/>
		</classpath>
	</taskdef>

	<!-- Axis2 tasks -->	
	<taskdef name="axis2-wsdl2java" classname="org.apache.axis2.tool.ant.AntCodegenTask">
		<classpath>
			<fileset dir="${axis2.lib}" includes="*jar" />
<!--			<fileset dir="${log4j.lib}" includes="*jar" />-->
		</classpath>
	</taskdef>

	<taskdef name="axis2-java2wsdl" classname="org.apache.ws.java2wsdl.Java2WSDLTask">
		<classpath>
<!--			<fileset dir="${log4j.lib}" includes="*jar" />-->
			<fileset dir="${axis2.lib}" includes="*jar" />
			<fileset dir="${glassfish.imq.lib}" includes="*jar" />
		</classpath>
	</taskdef>

	<!-- End of task definition section -->
	
	<!-- Now the real tasks -->	
	<target name="init">
		<mkdir dir="${build.classes}"/>
		<mkdir dir="${gen.src}"/>		
		<mkdir dir="${gen.src.axis}"/>		
		<mkdir dir="${gen.src.axis2}"/>		
		<mkdir dir="${build.wsdl}"/>
		<mkdir dir="${build.axis2-wsdl}"/>
	</target>
	
	
	<target name="xsd2java1" depends="init">
		<exec executable="xjc">
			<arg value="-d"/>
			<arg value="${gen.src}"/>
			<arg value="-p"/>
			<arg value="sai_cas.XMLCatalogFile"/>
			<arg value="schema/cas1.xsd"/>
<!--			<produces dir="${gen.src}/sai_cas/XMLCatalogFile"/>-->
		</exec>
	</target>

	
	<target name="xsd2java2" depends="init">
		<exec executable="xjc">
			<arg value="-d"/>
			<arg value="${gen.src}"/>
			<arg value="-p"/>
			<arg value="sai_cas.VOTABLEFile"/>
			<arg value="-b"/>
			<arg value="schema/VOTable-1.1.xjb"/>
			<arg value="schema/VOTable-1.1.xsd"/>

<!--			<produces dir="${gen.src}/sai_cas/VOTABLEFile"/>-->
		</exec>
	</target>
	
	
	<target name="compile1" depends="xsd2java1,xsd2java2">
		<javac debug="${debug}" srcdir="${gen.src}" destdir="${build.classes}">
			<compilerarg line="-Xlint:unchecked"/>
		</javac>
	</target>
	
	
	<target name="compile2" depends="compile1">
		<javac srcdir="src" debug="${debug}" destdir="${build.classes}" classpath="${build.classes}">
			<compilerarg line="-Xlint:unchecked" />
			<classpath>
				<fileset dir="${commons.fileupload.lib}" includes="*.jar" />
				<fileset dir="${tomcat.common.lib}" includes="*.jar" />
			</classpath>
		</javac>
	</target>

	
	<target name="jar" depends="compile2">
		<jar basedir="${build.classes}" destfile="${build}/sai_cas.jar">
		</jar>
	</target>
	
	
	<target name="war" depends="jar">
		<war destfile="${build}/sai_cas.war" webxml="web/WEB-INF/web.xml">
			<fileset dir="web" includes="conesearch.jsp" />
			<metainf dir="web/META-INF" includes="context.xml" />		
			<classes dir="${build.classes}"/>         
		</war>
	</target>
	
	
	<target name="deploy_cas" depends="war">
		<deploy war="${build}/sai_cas.war" url="${tomcat.manager.url}" 
			username="${tomcat.user}" password="${tomcat.password}"
			path="/sai_cas" update="true"/>
	</target>

	
	<target name="axis1-java2wsdl1" depends="compile2">
		<axis-java2wsdl namespace="gen_services.sai_cas"
			namespaceimpl="gen_services.sai_cas"
			classname="sai_cas.services.MainAxisServices"
			output="${build.wsdl}/sai_cas.wsdl"
			location="http://${axis.host}:${axis.port}/axis/sai_cas"
			bindingname="MainAxisServicesBinding">
			<classpath>
				<pathelement path="${build.classes}"/>
			</classpath>
		</axis-java2wsdl>
	</target>
	
	<target name="axis2-java2wsdl1" depends="compile2">
		<axis2-java2wsdl targetNamespace="gen_services.sai_cas"
			schemaTargetNamespace="gen_services.sai_cas"
			classname="sai_cas.services.MainAxisServices"
			outputFileName="sai_cas.wsdl"
			outputLocation="${build.axis2-wsdl}"
			serviceName="sai_cas">
			<classpath>
				<fileset dir="${build}" includes="*jar" />
			</classpath>
		</axis2-java2wsdl>
	</target>
	
	<target name="axis1-java2wsdl2" depends="compile2">
		<axis-java2wsdl namespace="gen_services.sai_cas"
			namespaceimpl="gen_services.sai_cas"
			classname="sai_cas.services.EditingServices"
			output="${build.wsdl}/sai_cas_edit.wsdl"
			location="http://${axis.host}:${axis.port}/axis/sai_cas"
			bindingname="EditingServicesBinding"
			serviceportname="sai_cas_edit">
			<classpath>
				<pathelement path="${build.classes}"/>
			</classpath>
		</axis-java2wsdl>
	</target>

	<target name="axis2-java2wsdl2" depends="compile2">
		<axis2-java2wsdl targetNamespace="gen_services.sai_cas"
			schemaTargetNamespace="gen_services.sai_cas"
			classname="sai_cas.services.EditingServices"
			outputFileName="sai_cas_edit.wsdl"
			outputLocation="${build.axis2-wsdl}"
			serviceName="sai_cas_edit">
			<classpath>
				<fileset dir="${build}" includes="*jar" />
			</classpath>
		</axis2-java2wsdl>
	</target>
	
	<target name="axis1-java2wsdl3" depends="compile2">
		<axis-java2wsdl namespace="gen_services.sai_cas"
			namespaceimpl="gen_services.sai_cas"
			classname="sai_cas.services.UserServices"
			output="${build.wsdl}/sai_cas_user.wsdl"
			location="http://${axis.host}:${axis.port}/axis/sai_cas"
			bindingname="UserServicesBinding"
			serviceportname="sai_cas_user">
			<classpath>
				<pathelement path="${build.classes}"/>
			</classpath>
		</axis-java2wsdl>
	</target>

	<target name="axis2-java2wsdl3" depends="compile2">
		<axis2-java2wsdl targetNamespace="gen_services.sai_cas"
			schemaTargetNamespace="gen_services.sai_cas"
			classname="sai_cas.services.UserServices"
			outputFileName="sai_cas_user.wsdl"
			outputLocation="${build.axis2-wsdl}"
			serviceName="sai_cas_user">
			<classpath>
				<fileset dir="${build}" includes="*jar" />
			</classpath>
		</axis2-java2wsdl>
	</target>

	
	<target name="axis1-wsdl2java1" depends="axis1-java2wsdl1">
		<axis-wsdl2java output="${gen.src.axis}" timeout="-1"
			url="${build.wsdl}/sai_cas.wsdl" serverside="true"
			skeletondeploy="true"/>
		<move file="${gen.src.axis}/sai_cas/gen_services/deploy.wsdd"
			tofile="${gen.src.axis}/sai_cas/gen_services/deploy1.wsdd"/>
		<move file="${gen.src.axis}/sai_cas/gen_services/undeploy.wsdd"
			tofile="${gen.src.axis}/sai_cas/gen_services/undeploy1.wsdd"/>
	</target>
	
	<target name="axis2-wsdl2java1" depends="axis2-java2wsdl1">
		<axis2-wsdl2java output="${gen.src.axis2}"
			WSDLFileName="${build.axis2-wsdl}/sai_cas.wsdl" serverside="true"
			generateServiceXML="true"/>
	</target>
	
	<target name="axis1-wsdl2java2" depends="axis1-java2wsdl2">
		<axis-wsdl2java output="${gen.src.axis}" timeout="-1"
			url="${build.wsdl}/sai_cas_edit.wsdl" serverside="true"
			skeletondeploy="true"/>
		<move file="${gen.src.axis}/sai_cas/gen_services/deploy.wsdd"
			tofile="${gen.src.axis}/sai_cas/gen_services/deploy2.wsdd"/>
		<move file="${gen.src.axis}/sai_cas/gen_services/undeploy.wsdd"
			tofile="${gen.src.axis}/sai_cas/gen_services/undeploy2.wsdd"/>
	</target>

	<target name="axis2-wsdl2java2" depends="axis2-java2wsdl2">
		<axis2-wsdl2java output="${gen.src.axis2}"
			WSDLFileName="${build.axis2-wsdl}/sai_cas_edit.wsdl" serverside="true"
			generateServiceXML="true"/>
	</target>

	<target name="axis1-wsdl2java3" depends="axis1-java2wsdl3">
		<axis-wsdl2java output="${gen.src.axis}" timeout="-1"
			url="${build.wsdl}/sai_cas_user.wsdl" serverside="true"
			skeletondeploy="true"/>
		<move file="${gen.src.axis}/sai_cas/gen_services/deploy.wsdd"
			tofile="${gen.src.axis}/sai_cas/gen_services/deploy3.wsdd"/>
		<move file="${gen.src.axis}/sai_cas/gen_services/undeploy.wsdd"
			tofile="${gen.src.axis}/sai_cas/gen_services/undeploy3.wsdd"/>
	</target>

	<target name="axis2-wsdl2java3" depends="axis2-java2wsdl3">
		<axis2-wsdl2java output="${gen.src.axis2}"
			WSDLFileName="${build.axis2-wsdl}/sai_cas_user.wsdl" serverside="true"
			generateServiceXML="true"/>
	</target>

	<target name="axis1-wsdl2javaSkyNode">
		<axis-wsdl2java output="${gen.src.axis}" timeout="-1"
			url="wsdls/SkyNode.wsdl" serverside="true"
			skeletondeploy="true"/>
	</target>

	<target name="axis2-wsdl2javaSkyNode">
		<axis2-wsdl2java output="${gen.src.axis2}"
			WSDLFileName="wsdls/SkyNode.wsdl" serverside="true"
			generateServiceXML="true"/>
	</target>
				
	<target name="axis1-compile" 
		depends="axis1-wsdl2java1,axis1-wsdl2java2,axis1-wsdl2java3,axis1-wsdl2javaSkyNode">
		<copy
			file="${impl}/sai_cas/gen_services/MainAxisServicesBindingImpl.java"
			todir="${gen.src.axis}/sai_cas/gen_services/"
			overwrite="true"/>
		<copy
			file="${impl}/sai_cas/gen_services/EditingServicesBindingImpl.java"
			todir="${gen.src.axis}/sai_cas/gen_services/"
			overwrite="true"/>
		<copy
			file="${impl}/sai_cas/gen_services/UserServicesBindingImpl.java"
			todir="${gen.src.axis}/sai_cas/gen_services/"
			overwrite="true"/>
		<copy
			file="${impl}/net/ivoa/SkyNode/SkyNodeSoapImpl.java"
			todir="${gen.src.axis}/net/ivoa/SkyNode/"
			overwrite="true"/>
		<javac debug="${debug}" srcdir="${gen.src.axis}"
			destdir="${build.classes}">
			<compilerarg line="-Xlint:-unchecked"/>
			<classpath>
				<fileset dir="${axis.lib}" includes="*.jar"/>
				<fileset dir="${javamail.lib}" includes="*.jar"/>
				<fileset dir="${activation.lib}" includes="*.jar"/>
			</classpath>
		</javac>
	</target>

	
	<target name="axis1-jar" depends="compile1,axis1-compile">
		<jar basedir="${build.classes}" destfile="${build}/sai_cas_ws.jar">
		</jar>
	</target>

	
	<target name="axis1-deploy_cas_ws" depends="axis1-jar">
		<copy file="${build}/sai_cas_ws.jar" todir="${axis.web-inf.lib}"/>
		<axis-admin
			xmlfile="${gen.src.axis}/sai_cas/gen_services/deploy1.wsdd"
			debug="${debug}" hostname="${axis.host}" port="${axis.port}"/>
		<sleep seconds="5"/>
		<axis-admin
			xmlfile="${gen.src.axis}/sai_cas/gen_services/deploy2.wsdd"
			debug="${debug}" hostname="${axis.host}" port="${axis.port}"/>
		<sleep seconds="5"/>
		<axis-admin
			xmlfile="${gen.src.axis}/sai_cas/gen_services/deploy3.wsdd"
			debug="${debug}" hostname="${axis.host}" port="${axis.port}"/>
		<sleep seconds="5"/>
		<axis-admin
			xmlfile="${gen.src.axis}/net/ivoa/SkyNode/deploy.wsdd"
			debug="${debug}" hostname="${axis.host}" port="${axis.port}"/>
	</target>
	
	<target name="axis1-undeploy_cas_ws" depends="axis1-jar">
		<copy file="${build}/sai_cas_ws.jar" todir="${axis.web-inf.lib}"/>
		<axis-admin
			xmlfile="${gen.src.axis}/sai_cas/gen_services/undeploy1.wsdd"
			debug="${debug}" hostname="${axis.host}" port="${axis.port}"/>
		<axis-admin
			xmlfile="${gen.src.axis}/sai_cas/gen_services/undeploy2.wsdd"
			debug="${debug}" hostname="${axis.host}" port="${axis.port}"/>
		<axis-admin
			xmlfile="${gen.src.axis}/sai_cas/gen_services/undeploy3.wsdd"
			debug="${debug}" hostname="${axis.host}" port="${axis.port}"/>
		<axis-admin
			xmlfile="${gen.src.axis}/net/ivoa/SkyNode/undeploy.wsdd"
			debug="${debug}" hostname="${axis.host}" port="${axis.port}"/>
	</target>
				
	
	<target name="all" depends="deploy_cas,axis1-deploy_cas_ws"/>
	
	<target name="docs">
		<mkdir dir="${docs}"/>		
		<javadoc destdir="${docs}" author="true" version="true"
			use="true" windowtitle="SAI CAS API">
			<packageset dir="src" defaultexcludes="yes">
				<include name="sai_cas/**"/>
			</packageset>
		</javadoc>
	</target>
	
	<target name="clean">
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${gen.src}"/>
			<fileset dir="${gen.src.axis}"/>
			<fileset dir="${gen.src.axis2}"/>
			<fileset dir="${build}"/>
			<fileset dir="${docs}"/>
		</delete>
	</target>

</project>
